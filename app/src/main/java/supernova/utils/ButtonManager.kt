package supernova.utils

import android.app.Activity
import androidx.appcompat.widget.SwitchCompat
import android.widget.Button
import androidx.core.content.ContextCompat
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import android.widget.TextView
import supernova.ui.StarFieldView
import supernova.ui.R

object ButtonManager {

    fun setupButtonListeners(
        activity: Activity, tvMoving: TextView,
        switchLED: SwitchCompat, switchMotion: SwitchCompat, switchFire: SwitchCompat,
        btnSupernova: Button, btnReset: Button,
        starFieldView: StarFieldView
    ) {
        // ‚úÖ LED „Éà„Ç∞„É´„Çπ„Ç§„ÉÉ„ÉÅ
        switchLED.setOnCheckedChangeListener { _, isChecked ->
            if (isChecked) {
                println("üü¢ LED ON")
                sendCommand { LedManager.sendLedCommand("ON") }
            } else {
                println("üî¥ LED OFF")
                sendCommand { LedManager.sendLedCommand("OFF") }
            }
        }

        // ‚úÖ Motion Detected „Éà„Ç∞„É´„Çπ„Ç§„ÉÉ„ÉÅ
        switchMotion.setOnCheckedChangeListener { _, isChecked ->
            if (isChecked) {
                println("üü¢ Motion Detected ON")
                sendCommand { MotionManager.sendMotionCommand("ON") }
            } else {
                println("üî¥ Motion Detected OFF")
                sendCommand { MotionManager.sendMotionCommand("OFF") }
            }
        }

        // ‚úÖ Fire Detected „Éà„Ç∞„É´„Çπ„Ç§„ÉÉ„ÉÅ
        switchFire.setOnCheckedChangeListener { _, isChecked ->
            if (isChecked) {
                println("üü¢ Fire Detected ON")
                sendCommand { FlameManager.sendFlameCommand("ON") }
            } else {
                println("üî¥ Fire Detected OFF")
                sendCommand { FlameManager.sendFlameCommand("OFF") }
            }
        }

        // ‚úÖ Supernova „Éú„Çø„É≥
        btnSupernova.setOnClickListener {
            println("üî• Supernova „Éú„Çø„É≥„ÅåÊäº„Åï„Çå„Åæ„Åó„Åü")
            starFieldView.stopStarAnimation()
            activity.runOnUiThread { tvMoving.text = "üî• Supernova" }
            sendCommand { SupernovaManager.sendSupernovaCommand("SUPERNOVA") }
        }

        // ‚úÖ Reset „Éú„Çø„É≥
        btnReset.setOnClickListener {
            println("üîÑ Reset „Éú„Çø„É≥„ÅåÊäº„Åï„Çå„Åæ„Åó„Åü")
            starFieldView.startStarAnimation()
            activity.runOnUiThread { tvMoving.text = "üîÑ RESET" }
            sendCommand { ResetManager.sendResetCommand("RESET") }
        }

    }

    // ‚úÖ „Ç≥„Éû„É≥„Éâ„ÇíÈùûÂêåÊúü„ÅßÈÄÅ‰ø°„Åô„ÇãÂÖ±ÈÄö„É°„ÇΩ„ÉÉ„Éâ
    private fun sendCommand(command: suspend () -> Unit) {
        CoroutineScope(Dispatchers.IO).launch {
            try {
                command()
            } catch (e: Exception) {
                println("‚ö†Ô∏è „Ç≥„Éû„É≥„ÉâÈÄÅ‰ø°„Ç®„É©„Éº: ${e.message}")
            }
        }
    }

}
