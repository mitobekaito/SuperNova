#include <Arduino.h>
#include <DHT.h>

// Pin c·∫£m bi·∫øn v√† thi·∫øt b·ªã ƒë·∫ßu ra
#define PIN_PIR 7
#define PIN_LED_R 9  
#define PIN_LED_G 10
#define PIN_LED_B 11
#define PIN_LED_W 8  // ‚ö™ LED tr·∫Øng n·ªëi ch√¢n 8
#define DHT_PIN 2
#define BUZZER_SIG 6
#define FLAME_SENSOR_DO 5
#define LM35_PIN A1  // üî• C·∫£m bi·∫øn nhi·ªát ƒë·ªô LM35 n·ªëi ch√¢n A1
#define RESET_BUTTON 3  // N√∫t nh·∫•n reset

// ƒê·ªãnh nghƒ©a lo·∫°i c·∫£m bi·∫øn DHT
#define DHT_TYPE DHT11
DHT dht(DHT_PIN, DHT_TYPE);

// Bi·∫øn tr·∫°ng th√°i c·∫£m bi·∫øn
int motionDetected = 0;
int flameDetected = 0;
float temperature = 0;
float humidity = 0;
float lm35Temperature = 0;
bool fireAlarm = false;  // Tr·∫°ng th√°i c·∫£nh b√°o ch√°y
bool whiteLedShouldBeOn = false;  // üö´ Tr·∫°ng th√°i LED tr·∫Øng

void setup() {
  Serial.begin(9600);
  dht.begin();
  
  pinMode(PIN_LED_R, OUTPUT);
  pinMode(PIN_LED_G, OUTPUT);
  pinMode(PIN_LED_B, OUTPUT);
  pinMode(PIN_LED_W, OUTPUT);
  pinMode(BUZZER_SIG, OUTPUT);
  pinMode(PIN_PIR, INPUT);
  pinMode(FLAME_SENSOR_DO, INPUT);
  pinMode(LM35_PIN, INPUT);
  pinMode(RESET_BUTTON, INPUT_PULLUP);
}

void loop() {
  // ƒê·ªçc d·ªØ li·ªáu t·ª´ c·∫£m bi·∫øn
  motionDetected = digitalRead(PIN_PIR);
  flameDetected = digitalRead(FLAME_SENSOR_DO); // LOW = ph√°t hi·ªán l·ª≠a
  temperature = dht.readTemperature();
  humidity = dht.readHumidity();
  lm35Temperature = analogRead(LM35_PIN) * (5.0 / 1023.0) * 100.0;  // LM35 ƒëo nhi·ªát ƒë·ªô

  Serial.print("üî• Flame Detected: "); Serial.println(flameDetected == LOW ? "YES" : "NO");
  Serial.print("‚ö™ White LED Status: "); Serial.println(whiteLedShouldBeOn ? "ON" : "OFF");
  Serial.print("üå° LM35 Temperature: "); Serial.println(lm35Temperature);

  if (isnan(temperature) || isnan(humidity)) {
    Serial.println("‚ùå L·ªói ƒë·ªçc d·ªØ li·ªáu t·ª´ c·∫£m bi·∫øn DHT!");
    return;
  }

  // üî• N·∫øu ph√°t hi·ªán ch√°y, k√≠ch ho·∫°t b√°o ƒë·ªông v√† b·∫≠t LED tr·∫Øng
  if (flameDetected == LOW) {  
    Serial.println("üî• C·∫¢NH B√ÅO: Ph√°t hi·ªán l·ª≠a! LED tr·∫Øng b·∫≠t!");
    fireAlarm = true;
    whiteLedShouldBeOn = true;  // Gi·ªØ LED tr·∫Øng s√°ng m√£i m√£i
  }

  // N·∫øu ƒëang c√≥ ch√°y, duy tr√¨ c·∫£nh b√°o
  if (fireAlarm) {
    setColor(255, 0, 0);  // LED ƒë·ªè
    digitalWrite(BUZZER_SIG, HIGH);
  }

  // üî• N·∫øu nhi·ªát ƒë·ªô LM35 v∆∞·ª£t 40¬∞C, t·∫Øt LED tr·∫Øng
  if (fireAlarm && lm35Temperature > 40.0) {
    Serial.println("‚ö†Ô∏è Nhi·ªát ƒë·ªô tr√™n 40¬∞C! LED tr·∫Øng t·∫Øt!");
    whiteLedShouldBeOn = false;
  }

  // B·∫≠t ho·∫∑c t·∫Øt LED tr·∫Øng d·ª±a v√†o tr·∫°ng th√°i
  digitalWrite(PIN_LED_W, whiteLedShouldBeOn ? HIGH : LOW);

  // N·∫øu kh√¥ng c√≥ ch√°y, ƒëi·ªÅu khi·ªÉn LED theo nhi·ªát ƒë·ªô
  if (!fireAlarm) {
    digitalWrite(BUZZER_SIG, LOW);
    if (temperature >= 27) {
      setColor(0, 0, 255);
    } else {
      setColor(255, 255, 0);
    }
  }

  // üõë Ki·ªÉm tra n√∫t reset
  if (digitalRead(RESET_BUTTON) == LOW) {
    Serial.println("üîÑ Reset h·ªá th·ªëng! LED tr·∫Øng ho·∫°t ƒë·ªông tr·ªü l·∫°i.");
    fireAlarm = false;
    whiteLedShouldBeOn = false;
    digitalWrite(BUZZER_SIG, LOW);
    digitalWrite(PIN_LED_W, LOW);
    setColor(255, 255, 0);
    delay(500);
  }

  delay(1000);
}

// ‚úÖ ƒêi·ªÅu khi·ªÉn LED RGB
void setColor(int red, int green, int blue) {
  analogWrite(PIN_LED_R, 255 - red);
  analogWrite(PIN_LED_G, 255 - green);
  analogWrite(PIN_LED_B, 255 - blue);
}
